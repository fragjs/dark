/**
 * Bpm - BootJs project manager.
 * Usages:
 * 		- build(configs);
 */

var Path = require('path');
var IO = require('utilskit/io');
var BootParser = require('./bootparser');

/**
 * 
 * @param {Object} configs The config object of current build.
 *
 * - 
 */
exports.build = function (configs) {

	// If `configs` is a string, treats it as path of build.src.js
	if (typeof configs === "string") {
		
		var fullPath = Path.resolve(configs);
		var content = IO.readFile(fullPath);

		if (!content) {
			this.error(fullPath + ' is not exists or file is empty.');
			return;
		}

		var VM = require('vm');

		var vmContext = {
			include: function () {

			},
			exclude: function () {

			}
		};

		try {
			VM.runInNewContext(data, vmContext, fullPath);
		} catch (e) {
			this.error('Execute ' + configs + ' Error: ' + e.toString());
		}

		if (vmContext.__bpm) {

			var base = Path.dirname(fullPath);

			if (!vmContext.__bpm.js) {

			}

		}

	}
	
	BootParser.parse(configs);
	
};


